[{"/home/ec2-user/environment/uber-eats-like/frontend/src/index.js":"1","/home/ec2-user/environment/uber-eats-like/frontend/src/App.js":"2","/home/ec2-user/environment/uber-eats-like/frontend/src/reportWebVitals.js":"3","/home/ec2-user/environment/uber-eats-like/frontend/src/containers/Restaurants.jsx":"4","/home/ec2-user/environment/uber-eats-like/frontend/src/containers/Foods.jsx":"5","/home/ec2-user/environment/uber-eats-like/frontend/src/containers/Orders.jsx":"6","/home/ec2-user/environment/uber-eats-like/frontend/src/apis/restaurants.js":"7","/home/ec2-user/environment/uber-eats-like/frontend/src/urls/index.js":"8","/home/ec2-user/environment/uber-eats-like/frontend/src/reducers/restaurants.js":"9","/home/ec2-user/environment/uber-eats-like/frontend/src/constants.js":"10","/home/ec2-user/environment/uber-eats-like/frontend/src/apis/foods.js":"11","/home/ec2-user/environment/uber-eats-like/frontend/src/reducers/foods.js":"12","/home/ec2-user/environment/uber-eats-like/frontend/src/style_constants.js":"13","/home/ec2-user/environment/uber-eats-like/frontend/src/components/Icons/index.js":"14","/home/ec2-user/environment/uber-eats-like/frontend/src/components/FoodWrapper.jsx":"15","/home/ec2-user/environment/uber-eats-like/frontend/src/components/StyledText.jsx":"16","/home/ec2-user/environment/uber-eats-like/frontend/src/components/FoodOrderDialog.jsx":"17","/home/ec2-user/environment/uber-eats-like/frontend/src/components/Buttons/CountUpButton.jsx":"18","/home/ec2-user/environment/uber-eats-like/frontend/src/components/Buttons/CountDownButton.jsx":"19","/home/ec2-user/environment/uber-eats-like/frontend/src/components/Buttons/OrderButton.jsx":"20","/home/ec2-user/environment/uber-eats-like/frontend/src/components/shared_style.js":"21","/home/ec2-user/environment/uber-eats-like/frontend/src/apis/line_foods.js":"22","/home/ec2-user/environment/uber-eats-like/frontend/src/components/NewOrderConfirmDialog.jsx":"23","/home/ec2-user/environment/uber-eats-like/frontend/src/apis/orders.js":"24","/home/ec2-user/environment/uber-eats-like/frontend/src/reducers/lineFoods.js":"25","/home/ec2-user/environment/uber-eats-like/frontend/src/components/OrderDetailItem.jsx":"26"},{"size":500,"mtime":1611148856972,"results":"27","hashOfConfig":"28"},{"size":794,"mtime":1611206616667,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1611148856976,"results":"30","hashOfConfig":"28"},{"size":2925,"mtime":1611296602271,"results":"31","hashOfConfig":"28"},{"size":5652,"mtime":1611366489411,"results":"32","hashOfConfig":"28"},{"size":3767,"mtime":1611374840422,"results":"33","hashOfConfig":"28"},{"size":240,"mtime":1611216825294,"results":"34","hashOfConfig":"28"},{"size":502,"mtime":1611216845950,"results":"35","hashOfConfig":"28"},{"size":652,"mtime":1611295631802,"results":"36","hashOfConfig":"28"},{"size":148,"mtime":1611207733919,"results":"37","hashOfConfig":"28"},{"size":250,"mtime":1611304894340,"results":"38","hashOfConfig":"28"},{"size":608,"mtime":1611305584611,"results":"39","hashOfConfig":"28"},{"size":199,"mtime":1611207810022,"results":"40","hashOfConfig":"28"},{"size":152,"mtime":1611307596781,"results":"41","hashOfConfig":"28"},{"size":1051,"mtime":1611317844493,"results":"42","hashOfConfig":"28"},{"size":194,"mtime":1611317811013,"results":"43","hashOfConfig":"28"},{"size":2618,"mtime":1611320915497,"results":"44","hashOfConfig":"28"},{"size":232,"mtime":1611320129627,"results":"45","hashOfConfig":"28"},{"size":234,"mtime":1611320144132,"results":"46","hashOfConfig":"28"},{"size":494,"mtime":1611320161312,"results":"47","hashOfConfig":"28"},{"size":508,"mtime":1611320000265,"results":"48","hashOfConfig":"28"},{"size":811,"mtime":1611375363250,"results":"49","hashOfConfig":"28"},{"size":1005,"mtime":1611365996284,"results":"50","hashOfConfig":"28"},{"size":281,"mtime":1611369559275,"results":"51","hashOfConfig":"28"},{"size":1162,"mtime":1611369010652,"results":"52","hashOfConfig":"28"},{"size":1389,"mtime":1611374050643,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"16vxs3e",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ec2-user/environment/uber-eats-like/frontend/src/index.js",[],["109","110"],"/home/ec2-user/environment/uber-eats-like/frontend/src/App.js",[],"/home/ec2-user/environment/uber-eats-like/frontend/src/reportWebVitals.js",[],"/home/ec2-user/environment/uber-eats-like/frontend/src/containers/Restaurants.jsx",[],"/home/ec2-user/environment/uber-eats-like/frontend/src/containers/Foods.jsx",["111"],"import React, { Fragment, useEffect, useReducer, useState } from 'react';\nimport styled from 'styled-components';\nimport { useHistory, Link } from \"react-router-dom\";\nimport { NewOrderConfirmDialog } from '../components/NewOrderConfirmDialog';\nimport { postLineFoods, replaceLineFoods } from '../apis/line_foods';\nimport { HTTP_STATUS_CODE } from '../constants';\n//constants\nimport { REQUEST_STATE } from '../constants';\nimport { COLORS } from '../style_constants';\n//apis\nimport { fetchFoods } from '../apis/foods';\n//components\nimport { LocalMallIcon } from '../components/Icons';\nimport { FoodWrapper } from '../components/FoodWrapper';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { FoodOrderDialog } from '../components/FoodOrderDialog';\n//reducers\nimport {\n  initialState as foodsInitialState,\n  foodsActionTyps,\n  foodsReducer,\n} from '../reducers/foods';\n// images\nimport MainLogo from '../images/logo.png';\nimport FoodImage from '../images/food-image.jpg';\n\n//style\nconst HeaderWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 8px 32px;\n`;\nconst BagIconWrapper = styled.div`\n  padding-top: 24px;\n`;\nconst ColoredBagIcon = styled(LocalMallIcon)`\n  color: ${COLORS.MAIN};\n`;\nconst MainLogoImage = styled.img`\n  height: 90px;\n`\nconst FoodsList = styled.div`\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n  margin-bottom: 50px;\n`;\nconst ItemWrapper = styled.div`\n  margin: 16px;\n`;\n\nexport const Foods = ({\n  match\n}) => {\n  const history = useHistory();\n  const [foodsState, dispatch] = useReducer(foodsReducer, foodsInitialState);\n  //モーダル\n  const initialState = {\n    isOpenOrderDialog: false,\n    selectedFood: null,\n    selectedFoodCount: 1,\n    isOpenNewOrderDialog: false,\n    existingResutaurautName: '',\n    newResutaurautName: '',\n  };\n  //state 商品がクリックされた場合に、setStateが実行(モーダル起動)\n  const [state, setState] = useState(initialState);\n\n  const submitOrder = () => {\n    postLineFoods({\n      foodId: state.selectedFood.id,\n      count: state.selectedFoodCount,\n    }).then(() => history.push('/orders'))\n      .catch((e) => {\n        if (e.response.status === HTTP_STATUS_CODE.NOT_ACCEPTABLE) {\n          setState({\n            ...state,\n            isOpenOrderDialog: false,\n            isOpenNewOrderDialog: true,\n            existingResutaurautName: e.response.data.existing_restaurant,\n            newResutaurautName: e.response.data.new_restaurant,\n          })\n        } else {\n          throw e;\n        }\n      })\n  };\n\n  const replaceOrder = () => {\n    replaceLineFoods({\n      foodId: state.selectedFood.id,\n      count: state.selectedFoodCount,\n    }).then(() => history.push('/orders'))\n  };\n\n  useEffect(() => {\n    dispatch({ type: foodsActionTyps.FETCHING });\n    fetchFoods(match.params.restaurantsId)\n      .then((data) => {\n        dispatch({\n          type: foodsActionTyps.FETCH_SUCCESS,\n          payload: {\n            foods: data.foods\n          }\n        });\n      })\n  }, [])\n  return (\n    <Fragment>\n      <HeaderWrapper>\n        <Link to=\"/restaurants\">\n          <MainLogoImage src={MainLogo} alt=\"main logo\" />\n        </Link>\n        <BagIconWrapper>\n          <Link to=\"/orders\">\n            <ColoredBagIcon fontSize=\"large\" />\n          </Link>\n        </BagIconWrapper>\n      </HeaderWrapper>\n      <FoodsList>\n        {\n          foodsState.fetchState === REQUEST_STATE.LOADING ?\n            <Fragment>\n              {\n                [...Array(12).keys()].map(i =>\n                  <ItemWrapper key={i}>\n                    <Skeleton key={i} variant=\"rect\" width={450} height={180} />\n                  </ItemWrapper>\n                )\n              }\n            </Fragment>\n          :\n            foodsState.foodsList.map(food =>\n              <ItemWrapper key={food.id}>\n                <FoodWrapper\n                  food={food}\n                  onClickFoodWrapper={\n                    (food) => setState({\n                      ...state,\n                      isOpenOrderDialog: true,\n                      selectedFood: food,\n                    })\n                  }\n                  imageUrl={FoodImage}\n                />\n              </ItemWrapper>\n            )\n        }\n      </FoodsList>\n      {\n        state.isOpenOrderDialog &&\n          <FoodOrderDialog\n            isOpen={state.isOpenOrderDialog}\n            food={state.selectedFood}\n            countNumber={state.selectedFoodCount}\n            onClickCountUp={() => setState({\n              ...state,\n              selectedFoodCount: state.selectedFoodCount + 1,\n            })}\n            onClickCountDown={() => setState({\n              ...state,\n              selectedFoodCount: state.selectedFoodCount - 1,\n            })}\n            // 関数を渡す\n            onClickOrder={() => submitOrder()}\n            // モーダルを閉じる時はすべてのstateを初期化する\n            onClose={() => setState({\n              ...state,\n              isOpenOrderDialog: false,\n              selectedFood: null,\n              selectedFoodCount: 1,\n            })}\n          />\n      }\n      {\n        state.isOpenNewOrderDialog &&\n          <NewOrderConfirmDialog\n            isOpen={state.isOpenNewOrderDialog}\n            onClose={() => setState({ ...state, isOpenNewOrderDialog: false })}\n            existingResutaurautName={state.existingResutaurautName}\n            newResutaurautName={state.newResutaurautName}\n            onClickSubmit={() => replaceOrder()}\n          />\n      }\n    </Fragment>\n  )\n}\n\n//&&より前がtrueの場合のみコンポーネントをレンダリング","/home/ec2-user/environment/uber-eats-like/frontend/src/containers/Orders.jsx",[],"/home/ec2-user/environment/uber-eats-like/frontend/src/apis/restaurants.js",[],"/home/ec2-user/environment/uber-eats-like/frontend/src/urls/index.js",[],"/home/ec2-user/environment/uber-eats-like/frontend/src/reducers/restaurants.js",[],"/home/ec2-user/environment/uber-eats-like/frontend/src/constants.js",[],"/home/ec2-user/environment/uber-eats-like/frontend/src/apis/foods.js",[],"/home/ec2-user/environment/uber-eats-like/frontend/src/reducers/foods.js",[],"/home/ec2-user/environment/uber-eats-like/frontend/src/style_constants.js",[],"/home/ec2-user/environment/uber-eats-like/frontend/src/components/Icons/index.js",[],"/home/ec2-user/environment/uber-eats-like/frontend/src/components/FoodWrapper.jsx",[],"/home/ec2-user/environment/uber-eats-like/frontend/src/components/StyledText.jsx",[],"/home/ec2-user/environment/uber-eats-like/frontend/src/components/FoodOrderDialog.jsx",[],"/home/ec2-user/environment/uber-eats-like/frontend/src/components/Buttons/CountUpButton.jsx",[],"/home/ec2-user/environment/uber-eats-like/frontend/src/components/Buttons/CountDownButton.jsx",[],["112","113"],"/home/ec2-user/environment/uber-eats-like/frontend/src/components/Buttons/OrderButton.jsx",[],"/home/ec2-user/environment/uber-eats-like/frontend/src/components/shared_style.js",[],"/home/ec2-user/environment/uber-eats-like/frontend/src/apis/line_foods.js",[],"/home/ec2-user/environment/uber-eats-like/frontend/src/components/NewOrderConfirmDialog.jsx",[],"/home/ec2-user/environment/uber-eats-like/frontend/src/apis/orders.js",[],"/home/ec2-user/environment/uber-eats-like/frontend/src/reducers/lineFoods.js",[],"/home/ec2-user/environment/uber-eats-like/frontend/src/components/OrderDetailItem.jsx",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":107,"column":6,"nodeType":"120","endLine":107,"endColumn":8,"suggestions":"121"},{"ruleId":"114","replacedBy":"122"},{"ruleId":"116","replacedBy":"123"},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params.restaurantsId'. Either include it or remove the dependency array.","ArrayExpression",["126"],["124"],["125"],"no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},"Update the dependencies array to be: [match.params.restaurantsId]",{"range":"129","text":"130"},[2980,2982],"[match.params.restaurantsId]"]